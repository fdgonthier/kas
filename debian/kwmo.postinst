#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

enable_kwmo()
{
    force="$1"

    # Create the configuration files if forced or the files do not exist.
    if [ "$force" = "1" -o ! -e /usr/share/teambox/web/kwmo/production.ini ]; then
        cp -f /usr/share/teambox/web/config-stock/kwmo/production.ini \
              /usr/share/teambox/web/kwmo/production.ini
    fi

    # Create kwmo apache configuration.    
    apache2_build_conf /usr/share/teambox/web/config-stock/kwmo/kwmo.conf \
                       kwmo 0 '127.0.0.1' 82
    
    # Remove cache when updating.
    rm -rf /usr/share/teambox/web/kwmo/data/*

    mkdir -p /usr/share/teambox/web/kwmo/data/
    chown -R root:teambox /usr/share/teambox/web/kwmo/data/
    chmod -R 770 /usr/share/teambox/web/kwmo/data/

    chown -R root:teambox /var/teambox/vnc_meta/vnc_cred/
    chmod -R 770 /var/teambox/vnc_meta/vnc_cred/
}

case "$1" in
    configure|force-configure)
        force=0
        if [ "$1" = "force-configure" ]; then force=1; fi 
        
        enable_kwmo $force
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

